Begun parsing source.
 [func](Func)(Define) test ( )  

Begun parsing function
 [func](Func)(Define) test ( )  

Checking parameters.
 func test [(](LeftPara)(Scope) )  

ParsPassed:
 func test ( [)](RightPara)(Scope)  

Begun parsing code body
 func test ( [)](RightPara)(Scope)  

Parsing assignment.
 [var](Var)(Define) a = 2 ;  

Parsing Assign
 var [a](Id)(Id) = 2 ;  

Parsing Var:a
 var [a](Id)(Id) = 2 ;  

Parsing expressionj
 var a = [2](Int)(Value) ;  

Expr:Expr:1 Elements
 var a = 2 [;](EndLine)(Flow)  

End of assign:
 var a = 2 [;](EndLine)(Flow)  

Parsing expressionj
 while ( [12](Int)(Value) < ( 10 + 2 ) )  

Parsing expressionj
 while ( 12 < ( [10](Int)(Value) + 2 ) )  

Expr:Expr:3 Elements
 while ( 12 < ( 10 + 2 [)](RightPara)(Scope) )  

Expr:Expr:3 Elements
 while ( 12 < ( 10 + 2 ) [)](RightPara)(Scope)  

Begun parsing code body
 while ( 12 < ( 10 + 2 ) [)](RightPara)(Scope)  

Parsing flat-statement.
 [printf](Id)(Id) ( A=2! ) ;  

BeginFS:
 [printf](Id)(Id) ( A=2! ) ;  

Func:printf

Parsing expressionj
 printf ( [A=2!](String)(Value) ) ;  

Expr:Expr:1 Elements
 printf ( A=2! [)](RightPara)(Scope) ;  

Parsed code-body.
EOF

