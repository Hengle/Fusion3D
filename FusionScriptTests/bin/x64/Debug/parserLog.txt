Begun parsing source.
 [func](Func)(Define) test ( )  

Begun parsing function
 [func](Func)(Define) test ( )  

Checking parameters.
 func test [(](LeftPara)(Scope) )  

ParsPassed:
 func test ( [)](RightPara)(Scope)  

Begun parsing code body
 func test ( [)](RightPara)(Scope)  

Parsing assignment.
 [a](Id)(Id) = 2 ;  

Parsing Assign
 [a](Id)(Id) = 2 ;  

Parsing Var:a
 [a](Id)(Id) = 2 ;  

Parsing expressionj
 a = [2](Int)(Value) ;  

Expr:Expr:1 Elements
 a = 2 [;](EndLine)(Flow)  

End of assign:
 a = 2 [;](EndLine)(Flow)  

Parsing Assign
 for ( [a](Id)(Id) = 1 ; a < 10 ; a = a + 1 )  

Parsing Var:a
 for ( [a](Id)(Id) = 1 ; a < 10 ; a = a + 1 )  

Parsing expressionj
 for ( a = [1](Int)(Value) ; a < 10 ; a = a + 1 )  

Expr:Expr:1 Elements
 for ( a = 1 [;](EndLine)(Flow) a < 10 ; a = a + 1 )  

End of assign:
 for ( a = 1 [;](EndLine)(Flow) a < 10 ; a = a + 1 )  

Parsing expressionj
 for ( a = 1 ; [a](Id)(Id) < 10 ; a = a + 1 )  

VarInExpr:a
 for ( a = 1 ; [a](Id)(Id) < 10 ; a = a + 1 )  

Expr:Expr:3 Elements
 for ( a = 1 ; a < 10 [;](EndLine)(Flow) a = a + 1 )  

Parsing Assign
 for ( a = 1 ; a < 10 ; [a](Id)(Id) = a + 1 )  

Parsing Var:a
 for ( a = 1 ; a < 10 ; [a](Id)(Id) = a + 1 )  

Parsing expressionj
 for ( a = 1 ; a < 10 ; a = [a](Id)(Id) + 1 )  

VarInExpr:a
 for ( a = 1 ; a < 10 ; a = [a](Id)(Id) + 1 )  

Expr:Expr:3 Elements
 for ( a = 1 ; a < 10 ; a = a + 1 [)](RightPara)(Scope)  

End of assign:
 for ( a = 1 ; a < 10 ; a = a + 1 [)](RightPara)(Scope)  

Begun parsing code body
[](BeginLine)(BeginLine) 

Parsing flat-statement.
 [printf](Id)(Id) ( A: + a ) ;  

BeginFS:
 [printf](Id)(Id) ( A: + a ) ;  

Func:printf

Parsing expressionj
 printf ( [A:](String)(Value) + a ) ;  

VarInExpr:a
 printf ( A: + [a](Id)(Id) ) ;  

Expr:Expr:3 Elements
 printf ( A: + a [)](RightPara)(Scope) ;  

Parsed code-body.
EOF

