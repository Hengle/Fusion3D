Begun parsing source.
 [func](Func)(Define) test ( )  

Begun parsing function
 [func](Func)(Define) test ( )  

Checking parameters.
 func test [(](LeftPara)(Scope) )  

ParsPassed:
 func test ( [)](RightPara)(Scope)  

Begun parsing code body
 func test ( [)](RightPara)(Scope)  

Parsing assignment.
 [a](Id)(Id) = 3 ;  

Parsing Assign
 [a](Id)(Id) = 3 ;  

Parsing Var:a
 [a](Id)(Id) = 3 ;  

Parsing expressionj
 a = [3](Int)(Value) ;  

Expr:Expr:1 Elements
 a = 3 [;](EndLine)(Flow)  

End of assign:
 a = 3 [;](EndLine)(Flow)  

Parsing expressionj
 if ( [a](Id)(Id) = 5 )  

VarInExpr:a
 if ( [a](Id)(Id) = 5 )  

Expr:Expr:3 Elements
 if ( a = 5 [)](RightPara)(Scope)  

Begun parsing code body
 if ( a = 5 [)](RightPara)(Scope)  

Parsing flat-statement.
 [printf](Id)(Id) ( True!: ) ;  

BeginFS:
 [printf](Id)(Id) ( True!: ) ;  

Func:printf

Parsing expressionj
 printf ( [True!:](String)(Value) ) ;  

Expr:Expr:1 Elements
 printf ( True!: [)](RightPara)(Scope) ;  

Parsing expressionj
 else if ( [a](Id)(Id) = 4 )  

VarInExpr:a
 else if ( [a](Id)(Id) = 4 )  

Expr:Expr:3 Elements
 else if ( a = 4 [)](RightPara)(Scope)  

Begun parsing code body
 else if ( a = 4 [)](RightPara)(Scope)  

Parsing flat-statement.
 [printf](Id)(Id) ( Else! ) ;  

BeginFS:
 [printf](Id)(Id) ( Else! ) ;  

Func:printf

Parsing expressionj
 printf ( [Else!](String)(Value) ) ;  

Expr:Expr:1 Elements
 printf ( Else! [)](RightPara)(Scope) ;  

Parsing expressionj
 else if ( [a](Id)(Id) = 7 )  

VarInExpr:a
 else if ( [a](Id)(Id) = 7 )  

Expr:Expr:3 Elements
 else if ( a = 7 [)](RightPara)(Scope)  

Begun parsing code body
 else if ( a = 7 [)](RightPara)(Scope)  

Parsing flat-statement.
 [printf](Id)(Id) ( Else2 ) ;  

BeginFS:
 [printf](Id)(Id) ( Else2 ) ;  

Func:printf

Parsing expressionj
 printf ( [Else2](String)(Value) ) ;  

Expr:Expr:1 Elements
 printf ( Else2 [)](RightPara)(Scope) ;  

Begun parsing code body
[](BeginLine)(BeginLine) 

Parsing flat-statement.
 [printf](Id)(Id) ( Final ) ;  

BeginFS:
 [printf](Id)(Id) ( Final ) ;  

Func:printf

Parsing expressionj
 printf ( [Final](String)(Value) ) ;  

Expr:Expr:1 Elements
 printf ( Final [)](RightPara)(Scope) ;  

Parsed code-body.
EOF

